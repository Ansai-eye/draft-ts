@import '@/pages/jiemicss/index.less';

.folder-coner(@background,@size,@angle: 30deg) {
  position: relative;
  background: @background;
  background: linear-gradient(
    @angle - 180deg,
    transparent @size,
    @background 0
  );
  border-radius: 0.5em;

  @x: (@size / sin(@angle));
  @y: (@size / cos(@angle));

  &::before {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    background: linear-gradient(
        to left bottom,
        transparent 50%,
        rgba(0, 0, 0, 0.2) 0,
        rgba(0, 0, 0, 0.4) 0
      )
      100% 0 no-repeat;
    width: @y;
    height: @x;
    transform: translateY(@y - @x) rotate(2 * @angle - 90deg);
    transform-origin: bottom right;
    border-bottom-left-radius: inherit;
    box-shadow: -0.2em 0.2em 0.3em -0.1em rgba(0, 0, 0, 0.15);
  }
}

.bevel {
  .container(#58a);
  .folder-coner(#58a,2em,50deg);
}

.hyphen {
  .container();
  width: 7em;
  padding: 1em 1.5em;
  text-align: justify;
  hyphens: auto;
}

.break-line {
  dt,
  dd {
    display: inline;
  }
  dd {
    margin-left: 0;
    font-weight: 500;
  }
  dd + dd {
    &::before {
      content: ',';
      font-weight: normal;
    }
  }
  dd + dt {
    &::before {
      content: '\A';
      white-space: pre;
    }
  }
}

.stripe-under-text {
  padding: 0 0.5em;
  line-height: 1.5;
  background: beige;
  background-image: linear-gradient(rgba(0, 0, 0, 0.2) 50%, transparent 0);
  background-size: auto 3em;
  background-origin: content-box;
}

.text-decoration {
  .container(white);
  word-break: break-all;
  width: 9em;
  text-align: justify;
  hyphens: auto;
  a[href] {
    text-decoration: none;
    background: linear-gradient(90deg, #a6a6a6 61.8%, transparent 0) repeat-x;
    background-size: 0.4em 2px;
    background-position: 0 1.05em;
    text-shadow: 0.05em 0 white, -0.05em 0 white;
  }
}

.word-effect {
  .container(hsl(210,13%,40%));
  color: hsl(210, 13%, 75%);
  padding: 0.5em 1em;
  line-height: 2;
  text-shadow: 0 -1px 1px black;
  &-2 {
    h1 {
      font: 500%/1 Rockwell, serif;
      background: deeppink;
      color: white;
      text {
        fill: currentColor;
      }
      svg {
        overflow: visible;
      }
      use {
        stroke: black;
        stroke-width: 6px;
        stroke-linejoin: round;
      }
    }
  }
  &-light {
    .container(#203);
    color: #ffc;
    font-size: 3em;
    font-weight: bold;
    text-align: center;
    line-height: 6.18em;
    transition: 1s;
    &:hover {
      color: transparent;
      text-shadow: 0 0 0.1em #ffc, 0 0 0.3em #ffc;
      // filter: blur(.1em);
    }
  }
  &-circle {
    .container();
    height: 10em;
    font-weight: bold;
    margin: 3em auto;
    svg {
      display: block;
      overflow: visible;
    }
    path {
      fill: none;
    }
  }
}

.cursor {
  .container(#58a);
  &.disabled,:disabled,[disabled],[aria-disabled="true"] {
    cursor: not-allowed;
  }
}

input[type="checkbox"] + label::before {
  content: '\a0';
  display: inline-block;
  vertical-align: .15em;
  width: .8em;
  height: .8em;
  margin-right: .2em;
  border-radius: .2em;
  background: silver;
  text-indent: .15em;
  line-height: .65;
}

input[type="checkbox"]:checked + label::before {
  content: '\2713';
  background: yellowgreen;
}

input[type="checkbox"] {
  position:absolute;
  clip:rect(0,0,0,0);
}

input[type="checkbox"]:focus + label::before {
  box-shadow: 0 0 .1em .1em #58a;
}

input[type="checkbox"]:disabled + label::before {
  background: gray;
  box-shadow: none;
  color: #555;
}

.scroll-reminder {
  .container();
  width: 20em;
  height: 12.36em;
  padding: 1em .5em;
  border: 1px solid silver;
  overflow-y: scroll;
  background: linear-gradient(white 30%,transparent),
    radial-gradient(at top,rgba(0,0,0,.2),transparent 70%);
  background-repeat: no-repeat;
  background-size: 100% 50px,100% 15px;
  background-attachment: local,scroll;
  &::-webkit-scrollbar {
    display: none;
  }
}

.iteractive-img {
  .container(transparent,352px,12.36em);
  display: inline-block;
  position: relative;
  >div {
    position:absolute;
    top:0;
    bottom:0;
    left:0;
    width: 50%;
    overflow:hidden;
    // resize: horizontal;
    // max-width: 100%;
  }
  img {
    display: block;
    max-height: 100%;
  }
  input {
    position: absolute;
    left: 0;
    bottom: 10px;
    margin: 0;
    width: 50%;
    filter: contrast(.5);
    mix-blend-mode: luminosity;
    transform: scale(2);
    transform-origin: left bottom;
  }
}

.self-adaption-content {
  figure {
    border: 1px solid #ccc;
    padding: 1em;
    max-width: 300px;
    max-width: min-content;
    margin: auto;
    >img {
      max-width: inherit;
    }
  }
}

footer {
  background: #333;
  padding: 1em;
  padding: 1em calc(50% - 450px);
  color: white;
}

.vertical-align {
  .container(#fb3,30em,12.36em);
  display: flex;
  main {
    .container(purple,auto,auto);
    padding: 1em 1.5em;
    margin: auto;
  }
}

.ease-ani {
  .container(transparent,20em,40em);
  margin: 2em 0 0;
  border: 1px solid #ccc;
  border-bottom: 1em solid green;
  box-sizing: border-box;
  .ball {
    width: 2em;
    height: 2em;
    background: #fb3;
    border-radius: 50%;
    margin: 0 auto;
    animation: bounce 3s cubic-bezier(.755, .05, .855, .06);
  }

  .callout {
    display: block;
    transition: .5s cubic-bezier(.25, .1, .3, 1.5) transform;
    transform-origin: 1.4em -.4em;
  }
  input:not(:focus) + .callout {
    transform: scale(0);
    transition: .25s transform;
  }
  .loader {
    width: 100px;
    height: 100px;
    background: url("../../../../assets/img/loading.jpg") 0 0;
    background-size: auto 100px;
    text-indent: 200%;
    white-space:nowrap;
    overflow:hidden;
    animation: loader 1s infinite steps(8);
  }
}

@keyframes loader {
  to {
    background-position: -800px 0;
  }
}

@keyframes bounce {
  60%,80%,to {
    transform: translateY(37em);
    animation-timing-function: ease;
  }
  70% { transform: translateY(33em); }
  90% { transform: translateY(35em); }
}

@keyframes elastic-grow {
  from {transform: scale(0);}
  70% {
    transform: scale(1.1);
    animation-timing-function:cubic-bezier(.1, .25, 1, .25)
  }
}